{"uid":"6d21ea482e60f58b","name":"create a new playlist - TestNG","fullName":"com.spotify.oauth2.tests.PlaylistTests.CreateNewPlaylist","historyId":"bcda6bee4d569a05cf7847f436723bc5","time":{"start":1695094858190,"stop":1695094860775,"duration":2585},"description":"this is the description - From ","descriptionHtml":"<p>this is the description - From</p>\n","status":"skipped","statusMessage":"\nExpected: <201>\n     but: was <401>","statusTrace":"java.lang.AssertionError: \nExpected: <201>\n     but: was <401>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat com.spotify.oauth2.tests.PlaylistTests.assertStatusCode(PlaylistTests.java:120)\r\n\tat com.spotify.oauth2.tests.PlaylistTests.CreateNewPlaylist(PlaylistTests.java:42)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1589)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1695094857963,"stop":1695094857970,"duration":7},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"this is the description - From ","status":"skipped","statusMessage":"\nExpected: <201>\n     but: was <401>","statusTrace":"java.lang.AssertionError: \nExpected: <201>\n     but: was <401>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat com.spotify.oauth2.tests.PlaylistTests.assertStatusCode(PlaylistTests.java:120)\r\n\tat com.spotify.oauth2.tests.PlaylistTests.CreateNewPlaylist(PlaylistTests.java:42)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1589)\r\n","steps":[{"name":"playlistBuilder","time":{"start":1695094858216,"stop":1695094858220,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"NewTestPlaylist2024"},{"name":"description","value":"NewTestPlaylist2024"},{"name":"_public","value":"true"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0},{"name":"post","time":{"start":1695094858230,"stop":1695094860748,"duration":2518},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=NewTestPlaylist2024, externalUrls=null, followers=null, href=null, id=null, images=null, name=NewTestPlaylist2024, owner=null, primaryColor=null, _public=true, snapshotId=null, tracks=null, type=null, uri=null)"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0},{"name":"assertStatusCode","time":{"start":1695094860748,"stop":1695094860768,"duration":20},"status":"failed","statusMessage":"\nExpected: <201>\n     but: was <401>","statusTrace":"java.lang.AssertionError: \nExpected: <201>\n     but: was <401>\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:18)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\r\n\tat com.spotify.oauth2.tests.PlaylistTests.assertStatusCode(PlaylistTests.java:120)\r\n\tat com.spotify.oauth2.tests.PlaylistTests.CreateNewPlaylist(PlaylistTests.java:42)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)\r\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\r\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\r\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)\r\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\r\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\r\n\tat java.base/java.lang.Thread.run(Thread.java:1589)\r\n","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"401"},{"name":"statusCode","value":"CODE_201"},{"name":"message","value":"New playlist created successfully"}],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":3},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"CreateNewPlaylist"},{"name":"parentSuite","value":"Automation Test Suite for Spotify Playlist APIs"},{"name":"suite","value":"Regression Tests execution for Spotify Playlist APIs"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"Giron"},{"name":"thread","value":"22460@Giron.TestNG-test=Regression Tests execution for Spotify Playlist APIs-1(36)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Create a playlist story"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify"},{"name":"severity","value":"blocker"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"-D","value":"REGRESSION"}],"links":[{"name":"1234567","url":"https://example.org/issue/1234567","type":"issue"},{"name":"allure","url":"https://example.org/mylink/allure","type":"mylink"},{"name":"12345","url":"https://example.org/tms/12345","type":"tms"},{"name":"https://example.org","type":"custom"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"6d21ea482e60f58b.json","parameterValues":["REGRESSION"]}